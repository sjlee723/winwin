<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.winwin.mapper.share.ShareMapper">

    <!-- 나눔 글 등록하기 -->
    <insert id="shareInsert">
        <selectKey keyProperty="shareNumber" order="BEFORE" resultType="long">
            select SEQ_SHARE.nextval from DUAL
        </selectKey>
        insert into SHARE_FREE(SHARE_NUMBER, SHARE_TITLE, SHARE_CONTENT, SHARE_WING, USER_NUMBER)
        values (#{shareNumber}, #{shareTitle}, #{shareContent}, #{shareWing}, #{userNumber})
    </insert>
    <!--    -->

    <!-- 나눔 글 번호로 조회하기 -->
    <select id="shareSelectNumber" resultType="shareVo">
        SELECT SHARE_NUMBER
             , SHARE_TITLE
             , SHARE_CONTENT
             , SHARE_STATUS
             , SHARE_READ_CNT
             , SHARE_DATE
             , SHARE_WING
             , S.USER_NUMBER
             , WU.USER_NICKNAME
             , WU.USER_ID
             , g.GRADE_NAME
        FROM SHARE_FREE S
                 JOIN WW_USER WU
                      ON SHARE_NUMBER = #{shareNumber} AND S.USER_NUMBER = WU.USER_NUMBER
                join GRADE G ON WU.USER_GRADE = G.GRADE_NUMBER
    </select>
    <!--    -->

    <!-- 나눔 글 전체 최신순 조회하기 -->
    <select id="shareSelectAll" resultType="shareVo">
        SELECT S.share_number,
               SHARE_TITLE,
               SHARE_CONTENT,
               SHARE_STATUS,
               SHARE_DATE,
               S.USER_NUMBER,
               SHARE_READ_CNT,
               USER_ID,
               USER_NICKNAME,
               file_system_name,
               file_uuid,
               file_upload_path,
               U.USER_STATUS
        FROM SHARE_FREE S
                 JOIN WW_USER U ON S.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN (
            select FILE_UPLOAD_PATH, FILE_UUID, FILE_SYSTEM_NAME, SHARE_NUMBER, RK
            FROM (
                     select FILE_UPLOAD_PATH,
                            FILE_UUID,
                            FILE_SYSTEM_NAME,
                            SHARE_NUMBER,
                            RANK() over (PARTITION BY SHARE_NUMBER ORDER BY FILE_NUMBER) RK
                     FROM share_file
                 )
            WHERE RK = 1
        ) J
                           ON S.SHARE_NUMBER = J.share_number
        WHERE S.SHARE_STATUS != '0'
        ORDER BY S.share_date DESC
    </select>
    <!--    -->

    <!-- 나눔 글 상세보기 진입 시 조회 수 증가 -->
    <update id="shareReadCnt">
        update SHARE_FREE
        set SHARE_READ_CNT = SHARE_READ_CNT + 1
        where share_number = #{shareNumber}
    </update>
    <!--    -->

    <!-- 나눔 글 번호로 수정하기 -->
    <update id="shareUpdate">
        update SHARE_FREE
        set SHARE_TITLE   = #{shareTitle},
            SHARE_CONTENT = #{shareContent}
        where SHARE_NUMBER = #{shareNumber}
    </update>
    <!--    -->

    <!-- 나눔 글 번호로 삭제하기 -->
    <delete id="shareDelete">
        delete
        from SHARE_FREE
        where SHARE_NUMBER = #{shareNumber}
    </delete>
    <!--    -->

    <!-- 나눔 페이지 최신순 무한스크롤 -->
    <select id="selectScroll" resultType="shareVo">
        SELECT share_number, SHARE_TITLE, SHARE_CONTENT, SHARE_STATUS, SHARE_DATE, USER_NUMBER, SHARE_READ_CNT,
        USER_ID, file_system_name, file_uuid, file_upload_path, USER_STATUS
        FROM(
        select ROWNUM RN, share_number, SHARE_TITLE, SHARE_CONTENT, SHARE_STATUS, SHARE_DATE, USER_NUMBER,
        SHARE_READ_CNT,
        USER_ID, file_system_name, file_uuid, file_upload_path, USER_STATUS
        from(
        SELECT S.share_number, SHARE_TITLE, SHARE_CONTENT, SHARE_STATUS, SHARE_DATE, S.USER_NUMBER, SHARE_READ_CNT,
        USER_ID, file_system_name, file_uuid, file_upload_path, U.USER_STATUS
        FROM SHARE_FREE S JOIN WW_USER U ON S.USER_NUMBER = U.USER_NUMBER
        LEFT JOIN (
        select FILE_UPLOAD_PATH, FILE_UUID, FILE_SYSTEM_NAME, SHARE_NUMBER, RK
        FROM (
        select FILE_UPLOAD_PATH, FILE_UUID, FILE_SYSTEM_NAME, SHARE_NUMBER,
        RANK() over (PARTITION BY SHARE_NUMBER ORDER BY FILE_NUMBER) RK
        FROM share_file
        )
        WHERE RK = 1
        ) J
        ON S.SHARE_NUMBER = J.share_number
        WHERE S.SHARE_STATUS != '0'
        ORDER BY S.share_date DESC
        )
        <![CDATA[
        where ROWNUM <= #{page} * #{amount}
        ]]>
        )
        WHERE RN > ( #{page} - 1) * #{amount}
    </select>
    <!--    -->

    <!-- 나눔 메인페이지 갯수 구하기 -->
    <select id="selectTotal" resultType="_int">
        select COUNT(share_number) from share_free
    </select>
    <!--    -->
    
    <!-- 로그인 시 유저 프로필 가져오기 -->
    <select id="selectUserProfile" resultType="shareVo">
        SELECT MC.CAREER_COMPANY, MC.CAREER_TITLE, P.PFP_SYSTEM_NAME, P.PFP_UUID, MC.CAREER_START_DATE, U.USER_NICKNAME
        FROM WW_USER U
        LEFT OUTER JOIN USER_PFP P
        ON U.USER_NUMBER = P.USER_NUMBER
        LEFT OUTER JOIN MENTOR M
        ON U.USER_NUMBER = M.USER_NUMBER
        LEFT OUTER JOIN MENTOR_CAREER MC
        ON MC.MENTOR_NUMBER = M.MENTOR_NUMBER
        <if test="userNumber  != null ">
            WHERE U.USER_NUMBER = #{userNumber}
        </if>
        ORDER BY MC.CAREER_START_DATE DESC
    </select>

    <select id="userLogin" resultType="shareVo">
        SELECT wu.USER_NUMBER , wu.USER_NAME , wu.USER_POSITION , g.GRADE_NAME , up.PFP_UPLOAD_PATH , up.PFP_SYSTEM_NAME , up.PFP_UUID
        FROM WW_USER wu LEFT OUTER JOIN USER_PFP up
                                        ON wu.USER_NUMBER = up.USER_NUMBER
                        left outer JOIN GRADE g ON wu.USER_GRADE = g.GRADE_NUMBER
        WHERE wu.USER_NUMBER = #{userNumber}
    </select>


    <!-- 거래가 되면 마감처리 -->
    <update id="updateShareStatus">
        UPDATE SHARE_FREE
        SET SHARE_STATUS = 2
        WHERE SHARE_NUMBER = #{shareNumber}
    </update>
</mapper>